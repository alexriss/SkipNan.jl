var documenterSearchIndex = {"docs":
[{"location":"","page":"Docs","title":"Docs","text":"CurrentModule = SkipNan","category":"page"},{"location":"#SkipNan","page":"Docs","title":"SkipNan","text":"","category":"section"},{"location":"","page":"Docs","title":"Docs","text":"Documentation for SkipNan.","category":"page"},{"location":"#About","page":"Docs","title":"About","text":"","category":"section"},{"location":"","page":"Docs","title":"Docs","text":"Use skipnan as you would use skipmissing.","category":"page"},{"location":"#Installation","page":"Docs","title":"Installation","text":"","category":"section"},{"location":"","page":"Docs","title":"Docs","text":"SkipNan can be installed from the Julia package registry via:","category":"page"},{"location":"","page":"Docs","title":"Docs","text":"using Pkg\nPkg.add(\"SkipNan\")","category":"page"},{"location":"#Use","page":"Docs","title":"Use","text":"","category":"section"},{"location":"","page":"Docs","title":"Docs","text":"using SkipNan\nx = skipnan([1., NaN, 2.])\nsum(x)\ncollect(x)\ncollect(keys(x))\nx[1]\nx[3]\nx[2]","category":"page"},{"location":"#Reference","page":"Docs","title":"Reference","text":"","category":"section"},{"location":"","page":"Docs","title":"Docs","text":"Modules = [SkipNan]","category":"page"},{"location":"#SkipNan.skipnan-Tuple{Any}","page":"Docs","title":"SkipNan.skipnan","text":"skipnan(itr)\n\nReturn an iterator over the elements in itr skipping NaN values, analogous to skipmissing. The returned object can be indexed using indices of itr if the latter is indexable. Indices corresponding to missing values are not valid: they are skipped by keys and eachindex, and a MissingException is thrown when trying to use them. Use collect to obtain an Array containing the non-missing values in itr. Note that even if itr is a multidimensional array, the result will always be a Vector since it is not possible to remove NaNs while preserving dimensions of the input.\n\nExamples\n\njulia> x = skipnan([1., NaN, 2.])\nskipnan([1.0, NaN, 2.0])\njulia> sum(x)\n3.0\njulia> x[1]\n1.0\njulia> x[2]\nERROR: MissingException: the value at index (2,) is missing\n[...]\njulia> argmax(x)\n3\njulia> collect(keys(x))\n2-element Vector{Int64}:\n 1\n 3\njulia> collect(skipnan([1., NaN, 2.]))\n2-element Vector{Float64}:\n 1.0\n 2.0\njulia> collect(skipnan([1. NaN; 2. NaN]))\n2-element Vector{Float64}:\n 1.0\n 2.0\n\n\n\n\n\n","category":"method"}]
}
